#!/bin/bash
set -e

echo "üî® Building Laravel + Vue.js application..."

# Clear npm cache
echo "üì¶ Clearing npm cache..."
npm cache clean --force

# Remove node_modules and package-lock.json
echo "üóëÔ∏è  Removing existing node_modules..."
rm -rf node_modules package-lock.json

# Install npm dependencies with legacy peer deps
echo "üì• Installing npm dependencies..."
npm install --legacy-peer-deps --no-audit --no-fund

# Build the application
echo "üèóÔ∏è  Building assets..."
npm run build

# Run Laravel migrations (only if database is available)
if [ "$RAILWAY_ENVIRONMENT" = "production" ]; then
    echo "üóÉÔ∏è Configurando banco de dados..."
    
    # Aguardar banco estar dispon√≠vel
    echo "‚è≥ Aguardando banco de dados estar pronto..."
    for i in {1..30}; do
        if php -r "try { new PDO('mysql:host=' . getenv('MYSQLHOST') . ';port=3306;dbname=railway', 'root', getenv('MYSQLPASSWORD')); echo 'ready'; exit(0); } catch(Exception \$e) { exit(1); }" 2>/dev/null; then
            echo "‚úÖ Banco de dados est√° pronto!"
            break
        fi
        echo "Tentativa $i/30 - Aguardando banco..."
        sleep 10
    done
    
    # Executar script de migra√ß√£o
    echo "üöÄ Executando script de migra√ß√£o..."
    ./railway-migrate.sh
    
    # Otimiza√ß√£o final (s√≥ ap√≥s migra√ß√µes)
    echo "‚ö° Otimiza√ß√£o final..."
    php artisan config:cache
    php artisan view:cache
    # N√£o fazer route:cache ainda devido ao conflito
fi

echo "‚úÖ Build completed successfully!"